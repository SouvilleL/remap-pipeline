rule aria2:
	input:
			lambda wildcards : expand( os.path.join( TAB_DIR,  "{tab_filename}"), tab_filename = dict_fastq_info[ wildcards.fastq_name][ "experimentName"])
	output:
			temp( os.path.join( PREPROCESSING_DIR, "raw_fastq", "{fastq_name}.fastq.gz"))
	singularity:
			config[ "singularity"][ "aria2"]
	conda:
			config[ "conda"][ "aria2"]
	benchmark:
			os.path.join( PREPROCESSING_DIR, "raw_fastq", "bench", "{fastq_name}.bench")
	resources:
			res=12
	log:
			os.path.join( PREPROCESSING_DIR, "raw_fastq", "log", "{fastq_name}.log")
	params:
			url = lambda wildcards : dict_fastq_info[ wildcards.fastq_name][ 'url'],
			md5 = lambda wildcards : dict_fastq_info[ wildcards.fastq_name][ 'md5']
	shell: """aria2c  --out={output} --checksum=md5={params.md5} {params.url}"""
	# shell: """touch {output}"""
