rule sam_to_bam:
	input:
			os.path.join( PREPROCESSING_DIR, "sam", "{replicat_name}.sam")
	output:
			temp( os.path.join( PREPROCESSING_DIR, "raw_bam", "{replicat_name}.bam"))
	singularity:
			config[ "singularity"][ "samtools"]
	conda:
			config[ "conda"][ "samtools"]
	benchmark:
				os.path.join( PREPROCESSING_DIR, "raw_bam", "bench", "{replicat_name}.bench")
	resources:
			res=1
	log:
			os.path.join( PREPROCESSING_DIR, "raw_bam", "log", "{replicat_name}.log")
	params:
			samtools = config[ "sam_to_bam"][ "other"],
			fasta = config[ "genome"]["fasta"]
	shell: "samtools view {params.samtools} -T {params.fasta} {input} > {output}"
	# shell : """touch {output}"""
