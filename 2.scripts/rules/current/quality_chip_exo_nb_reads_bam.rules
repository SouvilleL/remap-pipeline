rule nb_reads_bam:
    input:
            bam = lambda wildcards : expand( os.path.join( BAM_DIR, "{replicat_name}.bam"), replicat_name = dict_experiment_chip_filename[wildcards.experiment_name])
    output:
           # os.path.join( PEAKCALLING_DIR, "{experiment_name}", "macs2", "{experiment_name}_nb_reads.txt" )
            temp( os.path.join( PEAKCALLING_DIR, "{experiment_name}", "macs2", "{experiment_name}_nb_reads.txt" ))
    singularity:
            config[ "singularity"][ "samtools"]
    conda:
            config[ "conda"][ "samtools"]
    resources:
            res=1
    log:
            os.path.join( PEAKCALLING_DIR, "{experiment_name}", "macs2", "log", "{experiment_name}_nb_reads_bam.log")
    params:
            other = ""
    shell: 	"""
    nb_peak_tot=0

    IFS=" " read -ra ARRAY_BAM <<< "{input}"
    for i in "${{ARRAY_BAM[@]}}"
    do
        nb_peak=$(samtools view -c "$i")
        nb_peak_tot=$(($nb_peak_tot + $nb_peak))
    done
    echo $nb_peak_tot > {output}
    """
